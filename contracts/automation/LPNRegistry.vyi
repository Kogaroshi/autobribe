event NewRegistration:
        storage_contract: indexed(address)
        client: indexed(address)
        mapping_slot: uint256
        lengthSlot: uint256 

event NewRequest:
        request_id: indexed(uint256)
        storage_contract: indexed(address)
        client: indexed(address)
        params: bytes32
        start_block: uint256
        end_block: uint256
        offset: uint256
        gasFee: uint256
        proof_block: uint256

event NewResponse:
    request_id: indexed(uint256)
    client: indexed(address)
    results: uint256[123]

@external
def gasFee() -> uint256:
    ...

@external
def register(storage_contract: address, mapping_slot: uint256, length_slot: uint256):
    ...

@external
@payable
def request(storage_contract: address, params: bytes32, start_block: uint256, end_block: uint256) -> uint256: 
    ...

@external
def respond(request_id: uint256, data: Bytes[1000], block_number: uint256):
    ...